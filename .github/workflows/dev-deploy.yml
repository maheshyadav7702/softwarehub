name: Build & Deploy to EKS

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPO || \
          aws ecr create-repository --repository-name $ECR_REPO

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tag and URI
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          IMAGE_URI=${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Build and Push Docker image
        run: |
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Patch deployment.yaml with image URI
        run: |
          mkdir -p k8s
          sed "s|IMAGE_PLACEHOLDER|$IMAGE_URI|" k8s/deployment.yaml > k8s/deployment-patched.yaml

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Setup kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/deployment-patched.yaml
          kubectl apply -f k8s/service.yaml
